<FRACMain>

    canvas.before:
        BorderImage:
            # BorderImage behaves like the CSS BorderImage
            border: 10, 10, 10, 10
            source: 'button_white.png'
            pos: self.pos
            size: self.size
    cols: 1
    rows: 3
    padding: 10
    spacing: 10
    ScaleLabel:
        size_hint_y: 0.2
        text: "[color=#ff0000][b]F[/b]ace [b]R[/b]ecognition [b]A[/b]ccess [b]C[/b]ontrol [b]S[/b]ystem[/color]"
        size_hint: 1, 0.2
        markup: 'true'
        padding: dp(12), dp(12)
        font_size: self.height * 0.5
        outline_width: 0
        outline_color: 1,1,1

    GridLayout:
        rows: 1
        cols: 3
        AnchorLayout:
            anchor_x: 'center'
            anchor_y: 'center'
            Button:
                size_hint: None, None
                width: 110
                height: 110
                on_release: root.lockUnlock()
                Image:
                    id: lock_image
                    source: "locked.png"
                    center_x: self.parent.center_x
                    center_y: self.parent.center_y



        Label:
            text: ""
            size_hint_x: 0.1

        Image:
            id: face_image
            source: 'face.png'
    BoxLayout:
        canvas.before:
            Color:
                rgba: 0.2, 0.2, 255, 1
            Rectangle:
                # self here refers to the widget i.e BoxLayout
                pos: self.pos
                size: self.size
        size_hint_y: 0.1
        Label:
            canvas.before:
                Color:
                    rgba: 1, 0, 0, 0
                Rectangle:
                    # self here refers to the widget i.e BoxLayout
                    pos: self.pos
                    size: self.size
            size_hint_x: 0.1
            text: "Status:"
            halign: 'left'

        Label:
            halign: 'left'
            valign: 'middle'
            padding: 10,0
            canvas.before:
                Color:
                    rgba: 0, 1, 0, 0
                Rectangle:
                    # self here refers to the widget i.e BoxLayout
                    pos: self.pos
                    size: self.size
            id: statusLabel
            text_size: self.size
            bold: True
            text: "Locked"



<ScaleLabel@Label>:
    _scale: 1. if self.texture_size[0] < self.width else float(self.width) / self.texture_size[0]
    canvas.before:
        PushMatrix
        Scale:
            origin: self.center
            x: self._scale or 1.
            y: self._scale or 1.
    canvas.after:
        PopMatrix